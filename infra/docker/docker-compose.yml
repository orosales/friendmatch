version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: meetmates-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: meetmates
      POSTGRES_USER: meetmates
      POSTGRES_PASSWORD: meetmates123
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U meetmates -d meetmates']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: meetmates-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../../apps/api
      dockerfile: Dockerfile
    container_name: meetmates-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://meetmates:meetmates123@postgres:5432/meetmates
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      GOOGLE_CLIENT_ID: your-google-client-id
      GOOGLE_CLIENT_SECRET: your-google-client-secret
      FACEBOOK_APP_ID: your-facebook-app-id
      FACEBOOK_APP_SECRET: your-facebook-app-secret
      FRONTEND_URL: http://localhost:3000
      PORT: 3001
    ports:
      - '3001:3001'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../apps/api:/app
      - /app/node_modules
    command: npm run start:dev

volumes:
  postgres_data:
  redis_data:
